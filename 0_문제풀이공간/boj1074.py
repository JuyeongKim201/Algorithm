# 문제: z (실버 1)
'''
2^N * 2^N 배열 = 2^(N-1) * 2^(N-1) 배열의 z자로 구성된다. 
이를 따라서 0, 1, 2, 3 블록을 나눈다. 

[주어진 좌표(r, c)의 소속 블록 판별 논리]
(0, 0) (0, 1) (1, 0) (1, 1)
x랑 y좌표에 가중치*2 곱해주면서 위치 찾기


[시작점 저장]
0, 1, 2, 3 블록(i)의 시작점 = i*2^(2^(N-1))
    그 다음 서브 블록 => N = N-1

재귀적으로 블록 판별
    - (N = N) 0, 1, 2, 3 블록 중 어디 속하는지 판별
        - 시작점 저장
    - (N = N-1) 0, 1, 2, 3 블록 중 어디 속하는지 판별
        - 새로운 N 기준으로 시작점 저장
    - (재귀적 반복)
    - 마지막 리턴됐을 때 0, 1, 2, 3 블록 중 어디 속하는지 판별
    - 지금까지 저장된 모든 시작점의 합 + 마지막 소속 블록 



16x16

0*2^8
1*2^8
2*2^8
3*2^8

0
2^4
2*2^4
3*2^4
'''

